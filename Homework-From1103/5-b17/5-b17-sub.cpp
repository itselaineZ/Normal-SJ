/*1952339 信08 张馨月*/

/* 函数实现部分，{ }内的东西可以任意调整，目前的return 0只是一个示例，可改变 */

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strlen(const char str[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
	int rt = 0;
	for (; str[rt]; ++rt)
		;
    return rt; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strcat(char s1[], const char s2[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
	int p = tj_strlen(s1);
	s1[p] = s2[0];
	for (int i = 1; s2[i-1]; ++i)
		s1[p + i] = s2[i];
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strcpy(char s1[], const char s2[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
	s1[0] = s2[0];
	for (int i = 1; s2[i-1]; ++i)
		s1[i] = s2[i];
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strncpy(char s1[], const char s2[], const int len)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
	for (int i = 0; i < len && s2[i]; ++i)
		s1[i] = s2[i];
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strcmp(const char s1[], const char s2[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
	int i;
	for (i = 0; s1[i] && s2[i] && s1[i] == s2[i]; ++i)
		;
    return s1[i] - s2[i]; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strcasecmp(const char s1[], const char s2[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
	int i;
	for (i = 0; s1[i] && s2[i]; ++i)
		if ((s1[i] >= 'a' && s1[i] <= 'z' ? s1[i] - 'a' + 'A' : s1[i]) != (s2[i] >= 'a' && s2[i] <= 'z' ? s2[i] - 'a' + 'A' : s2[i]))
			break;
	if (!s1[i])
		return -1 * s2[i];
	else if (!s2[i])
		return 1*s1[i];
    return (s1[i] >= 'a' && s1[i] <= 'z' ? s1[i] - 'a' + 'A' : s1[i]) - (s2[i] >= 'a' && s2[i] <= 'z' ? s2[i] - 'a' + 'A' : s2[i]); //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strncmp(const char s1[], const char s2[], const int len)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
	int i;
	for (i = 0; s1[i] && s2[i] && i < len && s1[i] == s2[i]; ++i)
		;
	if (i == len)
		return 0;
    return s1[i] - s2[i]; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strcasencmp(const char s1[], const char s2[], const int len)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
	int i;
	for (i = 0; s1[i] && s2[i] && i < len; ++i)
		if ((s1[i] >= 'a' && s1[i] <= 'z' ? s1[i] - 'a' + 'A' : s1[i]) != (s2[i] >= 'a' && s2[i] <= 'z' ? s2[i] - 'a' + 'A' : s2[i]))
			break;
	if (i == len)
		return 0;
	if (!s1[i])
		return -1 * s2[i];
	else if (!s2[i])
		return 1 * s1[i];
	return (s1[i] >= 'a' && s1[i] <= 'z' ? s1[i] - 'a' + 'A' : s1[i]) - (s2[i] >= 'a' && s2[i] <= 'z' ? s2[i] - 'a' + 'A' : s2[i]);
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strupr(char str[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
	for (int i = 0; str[i]; ++i)
		if (str[i] >= 'a' && str[i] <= 'z')
			str[i] += 'A' - 'a';
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strlwr(char str[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
	for (int i = 0; str[i]; ++i)
		if (str[i] >= 'A' && str[i] <= 'Z')
			str[i] += 'a' - 'A';
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strchr(const char str[], char ch)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
	int i;
	for (i = 0; str[i] && str[i] != ch; ++i)
		;
	if (str[i] == ch)
		return i + 1;
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strstr(const char str[], const char substr[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
	int i, j;
	for (i = 0; str[i]; ++i) {
		for (j = 0; str[i + j] && substr[j] && str[i + j] == substr[j]; ++j)
			;
		if (!substr[j])
			return i + 1;
	}
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strrchr(const char str[], const char ch)
{
	/* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
	int i;
	for (i = tj_strlen(str)-1; i>=0 && str[i] != ch; --i)
		;
	return i+1; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strrstr(const char str[], const char substr[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
	int i, j;
	for (i = tj_strlen(str)-tj_strlen(substr); i >= 0; -- i) {
		for (j = 0; str[i + j] && substr[j] && str[i + j] == substr[j]; ++j)
			;
		if (!substr[j])
			return i + 1;
	}
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strrev(char str[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
	int ctr = tj_strlen(str);
	int len = ctr;
	ctr /= 2;
	char t;
	for (int i = 0; i < ctr; ++i) {
		t = str[i];
		str[i] = str[len - i - 1];
		str[len - i - 1] = t;
	}
    return 0; //return值可根据需要修改
}
